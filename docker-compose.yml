services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    depends_on:
      - app
    ports:
      - "5173:4173"
    networks:
      - backend

  db:
    image: postgres:17.0
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    restart: unless-stopped

volumes:
  db-data:

networks:
  backend:
    driver: bridge
